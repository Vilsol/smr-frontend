{"version":3,"file":"18.Cmlf4cfF.js","sources":["../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.ts","../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.svelte"],"sourcesContent":["import type { PageLoad } from './$types';\nimport { queryStore } from '@urql/svelte';\nimport { GetModVersionDocument } from '$lib/generated';\nimport { loadWaitForNoFetch } from '$lib/utils/gql';\n\nexport const load: PageLoad = async ({ params, parent }) => ({\n  ...params,\n  ...(await loadWaitForNoFetch({\n    version: queryStore({\n      query: GetModVersionDocument,\n      client: (await parent()).client,\n      variables: { version: params.versionId }\n    })\n  }))\n});\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n  import { markdown } from '$lib/utils/markdown';\n  import AnnouncementRow from '../announcements/AnnouncementRow.svelte';\n\n  export let changelog!: string;\n  export let approved: boolean;\n</script>\n\n<div>\n  {#if !approved}\n    <div class=\"p-4\">\n      <AnnouncementRow\n        importance={AnnouncementImportance.Warning}\n        message=\"This version has not yet been approved by the virus scanner and is hidden until this process is complete. If this message isn't gone in the next few minutes, ask for manual approval on the Discord.\" />\n    </div>\n  {/if}\n  <div class=\"card h-fit p-4\">\n    <section>\n      <div class=\"markdown-content break-words\">\n        {#await markdown(changelog) then changelogRendered}\n          <!-- eslint-disable -->\n          <p>{@html changelogRendered}</p>\n        {/await}\n      </div>\n    </section>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import { prettyBytes, prettyDate, prettyNumber } from '$lib/utils/formatting';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let version!: Pick<Version, 'created_at' | 'game_version' | 'size' | 'downloads' | 'hash'>;\n\n  export const { t } = getTranslate();\n</script>\n\n<div class=\"card p-4\">\n  <section>\n    <div class=\"break-words text-lg\">\n      <h3 class=\"my-4 text-2xl font-bold\">Info</h3>\n      <span><strong>{$t('entry.created-at')}:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>{$t('downloads')}:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>{$t('game-versions')}:</strong> {version.game_version}</span><br />\n      <span><strong>{$t('size')}:</strong> {prettyBytes(version.size)}</span><br />\n      <span><strong>{$t('hash')}:</strong> {version.hash}</span>\n    </div>\n  </section>\n</div>\n","<script lang=\"ts\">\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { API_REST } from '$lib/core';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyTarget } from '$lib/utils/formatting';\n  import VersionTargetSupportGrid from '$lib/components/versions/VersionTargetSupportGrid.svelte';\n  import VersionDependenciesGrid from '$lib/components/versions/VersionDependenciesGrid.svelte';\n  import { getContextClient } from '@urql/svelte';\n  import type { PageData } from './$types';\n  import { getModalStore, getToastStore, type ModalSettings, popup } from '@skeletonlabs/skeleton';\n  import Page404 from '$lib/components/general/Page404.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export const { t } = getTranslate();\n\n  export let data: PageData;\n\n  const { modId, versionId, version } = data;\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteVersionFn = () => {\n    client\n      .mutation(DeleteVersionDocument, { versionId })\n      .toPromise()\n      .then((value) => {\n        if (value.error) {\n          console.error(value.error.message);\n          toastStore.trigger({\n            message: 'Error deleting version: ' + value.error.message,\n            background: 'variant-filled-error',\n            autohide: false\n          });\n        } else {\n          toastStore.trigger({\n            message: `Version deleted`,\n            background: 'variant-filled-success',\n            timeout: 5000\n          });\n          goto(base + '/mod/' + modId);\n        }\n      });\n  };\n\n  const deleteModal: ModalSettings = {\n    type: 'confirm',\n    title: 'Delete Version?',\n    body: 'Are you sure you wish to delete this version?',\n    response: (r: boolean) => {\n      if (r) {\n        deleteVersionFn();\n      }\n    }\n  };\n\n  const modalStore = getModalStore();\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex h-auto flex-wrap items-center justify-between\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <button\n            class=\"variant-ghost-primary btn\"\n            on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            <span class=\"material-icons pr-2\">edit_document</span>\n            Edit\n          </button>\n          <button class=\"variant-ghost-primary btn\" on:click={() => modalStore.trigger(deleteModal)}>\n            <span class=\"material-icons pr-2\">delete</span>\n            Delete</button>\n        {/if}\n        {#if $version.data.getVersion.targets.length != 0}\n          <button\n            class=\"variant-ghost-primary btn\"\n            title=\"Download a specific release target of this mod\"\n            use:popup={{\n              event: 'focus-click',\n              target: 'versionArchDropdown',\n              placement: 'bottom',\n              closeQuery: 'a'\n            }}>\n            <span>Download...</span>\n            <span class=\"material-icons\" style=\"margin: 0;\">arrow_drop_down</span>\n          </button>\n\n          <div class=\"card z-10 w-72 shadow-xl\" data-popup=\"versionArchDropdown\">\n            <nav class=\"list-nav\">\n              <ul>\n                {#each $version.data.getVersion.targets as target}\n                  <li>\n                    <a\n                      class=\"w-full\"\n                      href={API_REST +\n                        '/mod/' +\n                        modId +\n                        '/versions/' +\n                        versionId +\n                        '/' +\n                        target.targetName +\n                        '/download'}>\n                      <span>Download {prettyTarget(target.targetName)}</span>\n                    </a>\n                  </li>\n                {/each}\n              </ul>\n            </nav>\n          </div>\n        {:else}\n          <a class=\"variant-ghost-primary btn\" href={base + '/mod/' + modId + '/version/' + versionId}>View</a>\n          <a\n            class=\"variant-ghost-primary btn\"\n            href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}>Download</a>\n        {/if}\n        <button\n          class=\"variant-ghost-primary btn\"\n          title=\"Install via Satisfactory Mod Manager\"\n          on:click={() => installMod($version.data.getVersion.mod.mod_reference)}>\n          <span class=\"material-icons\">download</span>\n          <span>Install</span>\n        </button>\n        <a\n          class=\"variant-ghost-primary btn\"\n          href={base + '/mod/' + modId}\n          title=\"View the description page for this mod\">\n          <span class=\"material-icons\">extension</span>\n          <span>{$t('version.back')}</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"grid-auto-max grid auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} approved={$version.data.getVersion.approved} />\n      <div class=\"grid auto-rows-min grid-cols-1 gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n        <VersionTargetSupportGrid targets={$version.data.getVersion.targets} />\n        <VersionDependenciesGrid dependencies={$version.data.getVersion.dependencies} />\n      </div>\n    </div>\n  </div>\n{:else}\n  <Page404 />\n{/if}\n"],"names":["load","async","params","parent","a","loadWaitForNoFetch","version","queryStore","query","GetModVersionDocument","client","variables","versionId","importance","AnnouncementImportance","Warning","insert_hydration","target","div","anchor","ctx","p","html_tag","raw_value","create_if_block","handle_promise","promise","markdown","info","div2","append_hydration","div1","section","div0","dirty","changelog","$$props","approved","t2_value","prettyDate","created_at","t7_value","prettyNumber","downloads","t12_value","t15_value","game_version","t17_value","prettyBytes","size","t22_value","t25_value","hash","h3","span0","strong0","br0","span1","strong1","br1","span2","strong2","br2","span3","strong3","br3","span4","strong4","set_data","t2","t5","t5_value","t7","t10","t10_value","t12","t15","t17","t20","t20_value","t22","t25","t","getTranslate","description","data","getVersion","mod","name","title","metadescriptors_changes","t0_value","create_if_block_4","targets","length","create_if_block_3","dependencies","base","div4","h1","button","div3","current","t0","versiondescription_changes","versiontargetsupportgrid_changes","versiondependenciesgrid_changes","error","message","t1","t1_value","button0","button1","attr","a0","API_REST","a1","each_value","ensure_array_like","i","nav","ul","event","placement","closeQuery","prettyTarget","targetName","a_href_value","li","span","fetching","create_if_block_5","modId","getContextClient","toastStore","getToastStore","deleteVersionFn","mutation","DeleteVersionDocument","toPromise","then","value","console","trigger","background","autohide","timeout","goto","deleteModal","type","body","response","r","modalStore","getModalStore","installMod","$version","mod_reference","$$invalidate","canUserEdit","$user","roles","deleteContent","authors","findIndex","author","user_id","id"],"mappings":"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"}