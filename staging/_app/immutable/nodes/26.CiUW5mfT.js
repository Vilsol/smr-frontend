import{S as O,i as U,s as F,d as y,v as L,P as _,Q as D,T as R,r as m,t as b,W as z,e as v,X as W,g as k,h as S,Y as X,j as h,m as w,N as x,n as $,U as M,Z as Y,O as j,b as G,a4 as Z,k as A,R as J,q as tt,_ as ot,u as et,p as st}from"../chunks/vendor.DkrEchob.js";import{F as N}from"../chunks/FicsitCard.D8wqxVx5.js";import{M as q}from"../chunks/MetaDescriptors.LIqjTRYs.js";const I="src/lib/components/tools/ToolCard.svelte";function K(s){let t,i,n=s[0].author+"",u;const o={c:function(){t=v("div"),i=v("span"),u=W(n),this.h()},l:function(e){t=k(e,"DIV",{slot:!0});var d=S(t);i=k(d,"SPAN",{});var r=S(i);u=X(r,n),r.forEach(h),d.forEach(h),this.h()},h:function(){w(i,I,9,4,234),x(t,"slot","stats"),w(t,I,8,2,211)},m:function(e,d){$(e,t,d),M(t,i),M(i,u)},p:function(e,d){d&1&&n!==(n=e[0].author+"")&&Y(u,n)},d:function(e){e&&h(t)}};return y("SvelteRegisterBlock",{block:o,id:K.name,type:"slot",source:"(6:2) ",ctx:s}),o}function T(s){let t,i;t=new N({props:{name:s[0].name,link:s[0].link,logo:s[0].logo,description:s[0].description,$$slots:{stats:[K]},$$scope:{ctx:s}},$$inline:!0});const n={c:function(){_(t.$$.fragment)},l:function(o){D(t.$$.fragment,o)},m:function(o,a){R(t,o,a),i=!0},p:function(o,[a]){const e={};a&1&&(e.name=o[0].name),a&1&&(e.link=o[0].link),a&1&&(e.logo=o[0].logo),a&1&&(e.description=o[0].description),a&3&&(e.$$scope={dirty:a,ctx:o}),t.$set(e)},i:function(o){i||(m(t.$$.fragment,o),i=!0)},o:function(o){b(t.$$.fragment,o),i=!1},d:function(o){z(t,o)}};return y("SvelteRegisterBlock",{block:n,id:T.name,type:"component",source:"",ctx:s}),n}function at(s,t,i){let{$$slots:n={},$$scope:u}=t;L("ToolCard",n,[]);let{tool:o}=t;s.$$.on_mount.push(function(){o===void 0&&!("tool"in t||s.$$.bound[s.$$.props.tool])&&console.warn("<ToolCard> was created without expected prop 'tool'")});const a=["tool"];return Object.keys(t).forEach(e=>{!~a.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<ToolCard> was created with unknown prop '${e}'`)}),s.$$set=e=>{"tool"in e&&i(0,o=e.tool)},s.$capture_state=()=>({FicsitCard:N,tool:o}),s.$inject_state=e=>{"tool"in e&&i(0,o=e.tool)},t&&"$$inject"in t&&s.$inject_state(t.$$inject),[o]}class V extends O{constructor(t){super(t),U(this,t,at,T,F,{tool:0}),y("SvelteRegisterComponent",{component:this,tagName:"ToolCard",options:t,id:T.name})}get tool(){throw new Error("<ToolCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set tool(t){throw new Error("<ToolCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}const H="src/routes/tools/+page.svelte";function B(s,t,i){const n=s.slice();return n[1]=t[i],n}function C(s){let t,i;t=new V({props:{tool:s[1]},$$inline:!0});const n={c:function(){_(t.$$.fragment)},l:function(o){D(t.$$.fragment,o)},m:function(o,a){R(t,o,a),i=!0},p:et,i:function(o){i||(m(t.$$.fragment,o),i=!0)},o:function(o){b(t.$$.fragment,o),i=!1},d:function(o){z(t,o)}};return y("SvelteRegisterBlock",{block:n,id:C.name,type:"each",source:"(107:2) {#each tools as tool}",ctx:s}),n}function P(s){let t,i,n,u="Tools",o,a,e;t=new q({props:{description:"A collection of useful tools for Satisfactory, such as recipe calculators and save editors",title:"Tools"},$$inline:!0});let d=j(s[0]),r=[];for(let p=0;p<d.length;p+=1)r[p]=C(B(s,d,p));const Q=p=>b(r[p],1,1,()=>{r[p]=null}),E={c:function(){_(t.$$.fragment),i=G(),n=v("h1"),n.textContent=u,o=G(),a=v("div");for(let c=0;c<r.length;c+=1)r[c].c();this.h()},l:function(c){const f=Z("svelte-5zkdli",document.head);D(t.$$.fragment,f),f.forEach(h),i=A(c),n=k(c,"H1",{class:!0,"data-svelte-h":!0}),J(n)!=="svelte-qmswt0"&&(n.textContent=u),o=A(c),a=k(c,"DIV",{class:!0});var l=S(a);for(let g=0;g<r.length;g+=1)r[g].l(l);l.forEach(h),this.h()},h:function(){document.title="Tools - SMR",x(n,"class","my-4 text-4xl font-bold"),w(n,H,115,0,4977),x(a,"class","grid grid-cols-1 gap-4 2xl:grid-cols-2 3xl:grid-cols-3"),w(a,H,116,0,5024)},m:function(c,f){R(t,document.head,null),$(c,i,f),$(c,n,f),$(c,o,f),$(c,a,f);for(let l=0;l<r.length;l+=1)r[l]&&r[l].m(a,null);e=!0},p:function(c,[f]){if(f&1){d=j(c[0]);let l;for(l=0;l<d.length;l+=1){const g=B(c,d,l);r[l]?(r[l].p(g,f),m(r[l],1)):(r[l]=C(g),r[l].c(),m(r[l],1),r[l].m(a,null))}for(st(),l=d.length;l<r.length;l+=1)Q(l);tt()}},i:function(c){if(!e){m(t.$$.fragment,c);for(let f=0;f<d.length;f+=1)m(r[f]);e=!0}},o:function(c){b(t.$$.fragment,c),r=r.filter(Boolean);for(let f=0;f<r.length;f+=1)b(r[f]);e=!1},d:function(c){c&&(h(i),h(n),h(o),h(a)),z(t),ot(r,c)}};return y("SvelteRegisterBlock",{block:E,id:P.name,type:"component",source:"",ctx:s}),E}function nt(s,t,i){let{$$slots:n={},$$scope:u}=t;L("Page",n,[]);const o=[{name:"Save Editor",author:"Goz3rr",logo:"https://cdn.jsdelivr.net/gh/Goz3rr/SatisfactorySaveEditor@6958101e3f2c0e50ba92df798ebefe4e6bdd4eb5/Reference%20Materials/SatisfactorySaveEditorLogo.png",description:"A work in progress save editor for Satisfactory. Consists of both a save parser and an application for viewing and editing the parsed data. (Supports Update 5 save files.)",link:"https://github.com/Goz3rr/SatisfactorySaveEditor"},{name:"Satisfactory Tools",author:"greeny",logo:"https://i.imgur.com/WQEHo26.png",description:"A collection of powerful tools for planning and building the perfect base. Calculate your production or consumption, browse items, buildings, and schematics and share your builds with others!",link:"https://www.satisfactorytools.com/"},{name:"Recipe Calculator",author:"KirkMcDonald",logo:"",description:"Recipe calculator using sankey diagrams.",link:"https://kirkmcdonald.github.io/satisfactory-calculator/calc.html"},{name:"SatisGraphtory",author:"tehalexf and thinkaliker",logo:"https://cdn.jsdelivr.net/gh/rhocode/rhocode.github.io@4713b4887e8821f1482de7af4ae32fb6a4b2bcaf/img/satoolsfactory_icons/dot.png",description:"This is a factory planner/optimizer/analyzer tool for factories old and new! Simulate resource chains, factory layouts, and more!",link:"https://satisgraphtory.com/"},{name:"Satisfactory Calculator Interactive Map (SCIM)",author:"Anthor",logo:"",description:"Collection of tools for Satisfactory (Production planner, Interactive map, Recipes, etc)",link:"https://satisfactory-calculator.com/"},{name:"Savegame Tool",author:"SillyBits",logo:"",description:"Allows for numerous options regarding satisfactory savegames, e.g. searching and erasing damaged entities. (Supports Update 3 save files.)",link:"https://github.com/SillyBits/satisfactory-savegame-tool-ng"},{name:"Satisfactory UI Kit",author:"Deantendo",logo:"",description:"A UI kit for Satisfactory mods",link:"https://github.com/deantendo/sfuikit"},{name:"Daniel's Satisfactory Tools",author:"DanielTheProgrammer",logo:"https://i.imgur.com/Ogt0r9k.png",description:"Visualize production chains, and browse items and recipes!",link:"https://daniel2013.github.io/satisfactory/"},{name:"Satisfactory 3D Map",author:"Moritz",logo:"",description:"Shows all objects within a savegame in 3D and provides a simple version of the game world for spatial context. Additionally, all properties and values of objects are shown.",link:"https://github.com/moritz-h/satisfactory-3d-map"},{name:"FactorioLab",author:"Doug Broad",logo:"https://factoriolab.github.io/factoriolab.webp",description:"Production calculator supporting multiple factory games and visualization approaches",link:"https://factoriolab.github.io/satisfactory"},{name:"Satisfactory Save File Python Tools",author:"GreyHak",logo:"https://raw.githubusercontent.com/GreyHak/sat_sav_parse/main/sat_py_icon.png",description:"A set of Python tools for parsing Satisfactory save files, and then displaying and manipulating the contents. (Supports 1.0 Release save files.)",link:"https://github.com/GreyHak/sat_sav_parse"},{name:"Satisfactory Dedicated Server Remote Manager",author:"GreyHak",logo:"https://raw.githubusercontent.com/GreyHak/sdsrm/main/sdsrm_icon.png",description:"Manage your 1.0+ Dedicated Server remotely with this Python GUI through the new Dedicated Server HTTPS API.  If you want a make your own remote manager, a Python library is available.",link:"https://github.com/GreyHak/sdsrm"},{name:"Satisfactory Logistics",author:"leonardfactory",logo:"https://satisfactory-logistics.xyz/images/logo/logo-square-big.png",description:"Keep track of in-game Logistics (by train, drones, vehicles), setup inputs and outputs between them and see how many items are consumed and where.",link:"https://satisfactory-logistics.xyz/"}],a=[];return Object.keys(t).forEach(e=>{!~a.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<Page> was created with unknown prop '${e}'`)}),s.$capture_state=()=>({ToolCard:V,MetaDescriptors:q,tools:o}),[o]}class lt extends O{constructor(t){super(t),U(this,t,nt,P,F,{}),y("SvelteRegisterComponent",{component:this,tagName:"Page",options:t,id:P.name})}}export{lt as component};
//# sourceMappingURL=26.CiUW5mfT.js.map
