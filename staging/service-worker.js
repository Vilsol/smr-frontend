const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.CBhiTBpK.js",s+"/_app/immutable/nodes/0.CiWL8Mrm.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.DCEEMmmS.js",s+"/_app/immutable/nodes/10.wvcey6bo.js",s+"/_app/immutable/nodes/11.DzjcIyBe.js",s+"/_app/immutable/nodes/12.O2EbyQDg.js",s+"/_app/immutable/nodes/13.BeSpIMaY.js",s+"/_app/immutable/nodes/14.DDQgansG.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.BwoTdACn.js",s+"/_app/immutable/nodes/16.BB13TdMm.js",s+"/_app/immutable/nodes/17.CIvF8C3V.js",s+"/_app/immutable/nodes/18.BViMrB7k.js",s+"/_app/immutable/nodes/19.D8EvkoWp.js",s+"/_app/immutable/nodes/2.DqFOgTyg.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.Df-0obhg.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.DH5ALD8E.js",s+"/_app/immutable/nodes/22.Bo0MtCnl.js",s+"/_app/immutable/nodes/23.cUtruedA.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.DhLklNtQ.js",s+"/_app/immutable/nodes/25.B9kXy_I6.js",s+"/_app/immutable/nodes/26.Dd4tCB9Y.js",s+"/_app/immutable/nodes/27.DbzqIuL8.js",s+"/_app/immutable/nodes/3.CrUlsayc.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.BpMJrqTi.js",s+"/_app/immutable/nodes/5.BWlXsdl6.js",s+"/_app/immutable/nodes/6.C2RaT6di.js",s+"/_app/immutable/nodes/7.BVbZeYYL.js",s+"/_app/immutable/nodes/8.CNpLGFZZ.js",s+"/_app/immutable/nodes/9.KEx9TWKa.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.Dt3g62FT.js",s+"/_app/immutable/chunks/CompatibilityModal.CGaSA9rp.js",s+"/_app/immutable/chunks/EditCompatibilityForm.Ci_hlqQX.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.BgTonQCM.js",s+"/_app/immutable/chunks/GuideCard.DZRvKzUJ.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.B0q3aVM3.js",s+"/_app/immutable/chunks/MetaDescriptors.D32B8HuV.js",s+"/_app/immutable/chunks/ModCard.CVpMpnml.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.Dh-lVtRu.js",s+"/_app/immutable/chunks/ModForm.BJUrPI08.js",s+"/_app/immutable/chunks/Page404.BlhLiQDs.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.DIMlS4it.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.YwRXUA-S.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.p_0DE4Sd.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.CV8pBBAK.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.CVh4212u.js",s+"/_app/immutable/chunks/forms.DOouge3B.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.eL_CuZFL.js",s+"/_app/immutable/chunks/launcher.CNj9VIxX.js",s+"/_app/immutable/chunks/markdown.Cbu7muHW.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.D4TjNawp.js",s+"/_app/immutable/chunks/user.Blry6_Tz.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.CxQWAXWI.js",s+"/_app/immutable/entry/start.PGwHy9BE.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1727579231204",p=self,o=`cache${n}`,c=l.concat(b),_=new Set(c);p.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{p.skipWaiting()}))});p.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);p.clients.claim()}))});async function r(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const m=await e.match(a);if(m)return m;throw t}}p.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),m=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!m&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||r(a.request))())});
