const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.6ZiOSv9j.js",s+"/_app/immutable/nodes/0.DzJKphbd.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.DAoTg1_N.js",s+"/_app/immutable/nodes/10.NIo2YRSo.js",s+"/_app/immutable/nodes/11.Bjfy4sCs.js",s+"/_app/immutable/nodes/12.D-1phGle.js",s+"/_app/immutable/nodes/13.bU4yBODS.js",s+"/_app/immutable/nodes/14.BG7sFuqf.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.DoHrNRXG.js",s+"/_app/immutable/nodes/16.CWM7GPfJ.js",s+"/_app/immutable/nodes/17.BDmJKnNJ.js",s+"/_app/immutable/nodes/18.Cv50HxC_.js",s+"/_app/immutable/nodes/19.BFw-48_x.js",s+"/_app/immutable/nodes/2.Cg7L9fR5.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.BuKMFHuZ.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.yvPRSNtg.js",s+"/_app/immutable/nodes/22.C-L4ekRr.js",s+"/_app/immutable/nodes/23.Bq7KQt_j.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.DyUTvpGz.js",s+"/_app/immutable/nodes/25.DfEGsPfO.js",s+"/_app/immutable/nodes/26.Cud0lOIU.js",s+"/_app/immutable/nodes/27.B0iGzPIi.js",s+"/_app/immutable/nodes/3.YP1NlcIP.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.BT8guwrg.js",s+"/_app/immutable/nodes/5.C_bRkazZ.js",s+"/_app/immutable/nodes/6.CvPhuuyx.js",s+"/_app/immutable/nodes/7.LQtL13a7.js",s+"/_app/immutable/nodes/8.CbVEZUq6.js",s+"/_app/immutable/nodes/9.CYgmmN1B.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.Bt2TziYc.js",s+"/_app/immutable/chunks/CompatibilityModal.COksNLks.js",s+"/_app/immutable/chunks/EditCompatibilityForm.BjWkEG2l.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.BIpiK0IY.js",s+"/_app/immutable/chunks/GuideCard.4PdqBqy7.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.CW-Y_L46.js",s+"/_app/immutable/chunks/MetaDescriptors.DEGZvfC7.js",s+"/_app/immutable/chunks/ModCard.vnto2usv.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.CjuWUpk7.js",s+"/_app/immutable/chunks/ModForm.C925ADIP.js",s+"/_app/immutable/chunks/Page404.IqGX6kPz.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.DdXLsIRO.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.Ck0CAXYj.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.D0DB58IK.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.L41tqIX7.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.BbPWD-KI.js",s+"/_app/immutable/chunks/forms.DdrYXznb.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.C7IxTehZ.js",s+"/_app/immutable/chunks/launcher.BkFtNcwS.js",s+"/_app/immutable/chunks/markdown.B3h4-y_7.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.BZY1jAdq.js",s+"/_app/immutable/chunks/user.DFj3m_sE.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.oJCkriyA.js",s+"/_app/immutable/entry/start.CX6k7ol_.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],_=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1727616317542",m=self,o=`cache${n}`,c=l.concat(_),b=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&b.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
