const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.BkCqJESR.js",s+"/_app/immutable/nodes/0.DSt3_uvx.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.hi_9cm1n.js",s+"/_app/immutable/nodes/10.CYzn3XU1.js",s+"/_app/immutable/nodes/11.DU7iS2iL.js",s+"/_app/immutable/nodes/12.DWA9HWAm.js",s+"/_app/immutable/nodes/13.Dz9vhloV.js",s+"/_app/immutable/nodes/14.D7V88ZIT.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.cToSBfi2.js",s+"/_app/immutable/nodes/16.6ATehyoN.js",s+"/_app/immutable/nodes/17.BzB43V8G.js",s+"/_app/immutable/nodes/18.DxXJJYKx.js",s+"/_app/immutable/nodes/19.BPIz2G2-.js",s+"/_app/immutable/nodes/2.BIdwn0jW.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.BlC7MT85.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.FiwcwGdc.js",s+"/_app/immutable/nodes/22.Dur9Opav.js",s+"/_app/immutable/nodes/23.CiNXRPjF.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.Dvjg9jSR.js",s+"/_app/immutable/nodes/25.gkrmLc4l.js",s+"/_app/immutable/nodes/26.CClEdg3O.js",s+"/_app/immutable/nodes/27.DYVvYfeZ.js",s+"/_app/immutable/nodes/3.yaF_xjOD.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.HssoslbV.js",s+"/_app/immutable/nodes/5.JpRK8IdC.js",s+"/_app/immutable/nodes/6.ao-lO6oY.js",s+"/_app/immutable/nodes/7.BkH3hInf.js",s+"/_app/immutable/nodes/8.BjiuUonS.js",s+"/_app/immutable/nodes/9.DFdPf6U_.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.Bo1Exy3w.js",s+"/_app/immutable/chunks/CompatibilityModal.B1Rm5GCV.js",s+"/_app/immutable/chunks/EditCompatibilityForm.BZ306x82.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.6N6iEsG8.js",s+"/_app/immutable/chunks/GuideCard.W3HSlwqE.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.DvzK_3wr.js",s+"/_app/immutable/chunks/MetaDescriptors.CvqbtSLi.js",s+"/_app/immutable/chunks/ModCard.x0nvSAmZ.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.BR89Rn-s.js",s+"/_app/immutable/chunks/ModForm.Cdl6jAxE.js",s+"/_app/immutable/chunks/Page404.Do1BVMg0.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.BvUYHm9N.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.5C-KKoSZ.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.DjBbSv5i.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.BGq5p-D0.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.LxReSbYV.js",s+"/_app/immutable/chunks/forms.aT04QBkC.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.F7VON4K6.js",s+"/_app/immutable/chunks/launcher.BYHRrRyP.js",s+"/_app/immutable/chunks/markdown.DVn7lEx1.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.CTO9OiuR.js",s+"/_app/immutable/chunks/user.2jPPxvlL.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.CrRUGAjZ.js",s+"/_app/immutable/entry/start.DD-ZHse5.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],_=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1727648405748",m=self,o=`cache${n}`,c=l.concat(_),b=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const i=await e.match(a);if(i)return i;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),i=e.hostname===self.location.hostname&&e.port!==self.location.port,p=e.host===self.location.host&&b.has(e.pathname),u=a.request.cache==="only-if-cached"&&!p;t&&!i&&!u&&p&&!a.request.url.includes("start")&&a.respondWith((async()=>p&&await caches.match(a.request)||d(a.request))())});
