const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.BzCJ0J5N.js",s+"/_app/immutable/nodes/0.xoudRUXM.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.ClAcNUvZ.js",s+"/_app/immutable/nodes/10.C6tCVi9p.js",s+"/_app/immutable/nodes/11.8JCHgh85.js",s+"/_app/immutable/nodes/12.BUY-OWlk.js",s+"/_app/immutable/nodes/13.CwELa3b-.js",s+"/_app/immutable/nodes/14.C8Ag7WMm.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.CXBOexS1.js",s+"/_app/immutable/nodes/16.UcPEVpvj.js",s+"/_app/immutable/nodes/17.DzHqCBBp.js",s+"/_app/immutable/nodes/18.C99o8bEu.js",s+"/_app/immutable/nodes/19.CEHlEoC5.js",s+"/_app/immutable/nodes/2.C1jQ9awd.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.MsADZDmY.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.CbTQtoiT.js",s+"/_app/immutable/nodes/22.5BBbjmcX.js",s+"/_app/immutable/nodes/23.uhr8UJ1u.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.pEsBQL_T.js",s+"/_app/immutable/nodes/25.CxCf-13s.js",s+"/_app/immutable/nodes/26.BFxHoAir.js",s+"/_app/immutable/nodes/27.Cs1CVPFW.js",s+"/_app/immutable/nodes/3.Bng-5Rfz.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.DjDqbEOd.js",s+"/_app/immutable/nodes/5.C9Dr3sMs.js",s+"/_app/immutable/nodes/6.5Oqgs2Ns.js",s+"/_app/immutable/nodes/7.hEvOh03D.js",s+"/_app/immutable/nodes/8.CTfN9UvD.js",s+"/_app/immutable/nodes/9.DPrQLkyT.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.D7SD-Joe.js",s+"/_app/immutable/chunks/CompatibilityModal.ZjdutMkf.js",s+"/_app/immutable/chunks/EditCompatibilityForm.CIOeHoOn.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.CiSQAt5Q.js",s+"/_app/immutable/chunks/GuideCard.CIGD4qSv.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.9shdfppm.js",s+"/_app/immutable/chunks/MetaDescriptors.DziSNFQq.js",s+"/_app/immutable/chunks/ModCard.89ZCgzRe.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.NQqS42tA.js",s+"/_app/immutable/chunks/ModForm.DAEbJpKc.js",s+"/_app/immutable/chunks/Page404.CIzMSHsc.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.CESETBoJ.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.BMZutAEf.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.BjfiIu7f.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.BtGR8Ths.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.1uCZ4JMU.js",s+"/_app/immutable/chunks/forms.cROAfMLN.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.YjOmLJ0I.js",s+"/_app/immutable/chunks/launcher.CoIYfx-y.js",s+"/_app/immutable/chunks/markdown.DrvOSx71.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.D8WYdiCR.js",s+"/_app/immutable/chunks/user.BV2smIIq.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.BIR0l0l8.js",s+"/_app/immutable/entry/start.CrEJ03o1.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],o="1728348668245",m=self,n=`cache${o}`,c=l.concat(b),_=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(n).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==n&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${o}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
