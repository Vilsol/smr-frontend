const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/_app/immutable/entry/app.DZ6pRhSs.js",s+"/_app/immutable/nodes/0.NrXdWO4L.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.4dFzjNpw.js",s+"/_app/immutable/nodes/10.DJYfejlC.js",s+"/_app/immutable/nodes/11.XE11smEb.js",s+"/_app/immutable/nodes/12.BQt24RqZ.js",s+"/_app/immutable/nodes/13.XzWwJHCl.js",s+"/_app/immutable/nodes/14.cJpXBv05.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.B-kZm91S.js",s+"/_app/immutable/nodes/16.Bh9OXRXR.js",s+"/_app/immutable/nodes/17.ClNx-9NL.js",s+"/_app/immutable/nodes/18.BfqDnmvR.js",s+"/_app/immutable/nodes/19.fgH6klLa.js",s+"/_app/immutable/nodes/2.Clh7rdtw.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.BkMaQ-0O.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.Dd5L2TbS.js",s+"/_app/immutable/nodes/22.CUqmw85z.js",s+"/_app/immutable/nodes/23.Dt2JvL47.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.Dp1-wZrQ.js",s+"/_app/immutable/nodes/25.CILaBTHS.js",s+"/_app/immutable/nodes/26.8zJp-cM5.js",s+"/_app/immutable/nodes/27.Ds_bZwTh.js",s+"/_app/immutable/nodes/3.DV3ONGNZ.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.lfP4V-zi.js",s+"/_app/immutable/nodes/5.MhIU67HW.js",s+"/_app/immutable/nodes/6.BZW8EPh0.js",s+"/_app/immutable/nodes/7.Bra4QONI.js",s+"/_app/immutable/nodes/8.kJ65zVoh.js",s+"/_app/immutable/nodes/9.C6RzMQIO.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.DMSe4sMn.js",s+"/_app/immutable/chunks/CompatibilityModal._DRbBYXg.js",s+"/_app/immutable/chunks/EditCompatibilityForm.Bv0LzdQQ.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.2maVfw6g.js",s+"/_app/immutable/chunks/GuideCard.DKVrIoAp.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.Bzw3Ty9-.js",s+"/_app/immutable/chunks/MetaDescriptors.DSqI32ZZ.js",s+"/_app/immutable/chunks/ModCard.DhgQ1c0K.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.d6riD0-9.js",s+"/_app/immutable/chunks/ModForm.CLA9PByg.js",s+"/_app/immutable/chunks/Page404.AEOlKRgX.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.DlGsKvRF.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.Phel00r3.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.DaUBcIhX.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.DFx7An25.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.BJQaDe41.js",s+"/_app/immutable/chunks/forms.CwgWhj7S.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.DTcMznrK.js",s+"/_app/immutable/chunks/launcher.BtG1tVdT.js",s+"/_app/immutable/chunks/markdown.BNpWz4H7.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.CB6o2Exf.js",s+"/_app/immutable/chunks/user.CGlf7KNK.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.6eVwxQed.js",s+"/_app/immutable/entry/start.6OyMWPLn.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1727992741758",m=self,o=`cache${n}`,c=u.concat(b),_=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),l=a.request.cache==="only-if-cached"&&!i;t&&!p&&!l&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
