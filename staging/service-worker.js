const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.WILFjjT2.js",s+"/_app/immutable/nodes/0.UA-Qi5c7.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.CkbvxYTf.js",s+"/_app/immutable/nodes/10.CdePzxyo.js",s+"/_app/immutable/nodes/11.LgsS7nMs.js",s+"/_app/immutable/nodes/12.CBoSnGNJ.js",s+"/_app/immutable/nodes/13.CfjHlG-G.js",s+"/_app/immutable/nodes/14.D969QxFm.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.BYeglLIh.js",s+"/_app/immutable/nodes/16.BzZbY-0Q.js",s+"/_app/immutable/nodes/17.Dbrcvgjg.js",s+"/_app/immutable/nodes/18.CccrtYhj.js",s+"/_app/immutable/nodes/19.DHCccMsu.js",s+"/_app/immutable/nodes/2.CRbGGXBU.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.Z1ZlWmvB.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.CqXsKoXY.js",s+"/_app/immutable/nodes/22.DE0yanEU.js",s+"/_app/immutable/nodes/23.BpHAz1O7.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.B2LgqL0p.js",s+"/_app/immutable/nodes/25.DDm0WnwB.js",s+"/_app/immutable/nodes/26.D6yUaUPh.js",s+"/_app/immutable/nodes/27.BQRq9JNm.js",s+"/_app/immutable/nodes/3.BCaOCMsg.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.VcIdj7VG.js",s+"/_app/immutable/nodes/5.C0tAhD9t.js",s+"/_app/immutable/nodes/6.BIuvm9M5.js",s+"/_app/immutable/nodes/7.DNyiht0y.js",s+"/_app/immutable/nodes/8.DaqpVFFC.js",s+"/_app/immutable/nodes/9.BD2GLEVO.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.Bet6erSY.js",s+"/_app/immutable/chunks/CompatibilityModal.DqVv-RHr.js",s+"/_app/immutable/chunks/EditCompatibilityForm.CFKmAXIR.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.Hnbnr9CS.js",s+"/_app/immutable/chunks/GuideCard.BiFg5AHZ.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.DW2_Q6zC.js",s+"/_app/immutable/chunks/MetaDescriptors.PVCzIjbG.js",s+"/_app/immutable/chunks/ModCard.d4604vQS.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.D686lLXu.js",s+"/_app/immutable/chunks/ModForm.BKJhXYjz.js",s+"/_app/immutable/chunks/Page404.ZzBQvNxe.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.Dx6omovU.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.DjLIfJGG.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.Nnavv8pQ.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.RMn4tPbF.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.CfIPR2Er.js",s+"/_app/immutable/chunks/forms.jrCPDTC3.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.D3jA7OgG.js",s+"/_app/immutable/chunks/launcher.ASQ-DCfz.js",s+"/_app/immutable/chunks/markdown.CR7Yazm8.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.CShcNaYl.js",s+"/_app/immutable/chunks/user.Ci1uVs_V.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.BMQGiw0k.js",s+"/_app/immutable/entry/start.DMfOtrTt.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1727578997048",m=self,o=`cache${n}`,c=l.concat(b),_=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function r(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||r(a.request))())});
