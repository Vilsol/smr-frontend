const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.CCk5aqzJ.js",s+"/_app/immutable/nodes/0.BFXEV7fi.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.DJQM9F6h.js",s+"/_app/immutable/nodes/10.BEB_LcQ_.js",s+"/_app/immutable/nodes/11.CiymjJgt.js",s+"/_app/immutable/nodes/12.v2V_0puw.js",s+"/_app/immutable/nodes/13.DEJaSTdH.js",s+"/_app/immutable/nodes/14.DVX2Hpnh.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.DTbRvXUF.js",s+"/_app/immutable/nodes/16.CHSVXF5P.js",s+"/_app/immutable/nodes/17.Bm-dtdYs.js",s+"/_app/immutable/nodes/18.yM_1G81E.js",s+"/_app/immutable/nodes/19.BLXVX4BW.js",s+"/_app/immutable/nodes/2.Bpz-gqVl.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.C06JiPyy.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.Dd5TeVZW.js",s+"/_app/immutable/nodes/22.sEd5wSCc.js",s+"/_app/immutable/nodes/23.BPQ5f3Rt.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.DewQp4jA.js",s+"/_app/immutable/nodes/25.-KT-BjnZ.js",s+"/_app/immutable/nodes/26.D_KEJRkN.js",s+"/_app/immutable/nodes/27.Z2Tg_Ahf.js",s+"/_app/immutable/nodes/3.Dk5GtEeK.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.g3UqVcbP.js",s+"/_app/immutable/nodes/5.DqG7OJuH.js",s+"/_app/immutable/nodes/6.BFHjKmKE.js",s+"/_app/immutable/nodes/7.ZPYXP1fI.js",s+"/_app/immutable/nodes/8.4CAgTXxd.js",s+"/_app/immutable/nodes/9.DXrClgor.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.BN_2xfqE.js",s+"/_app/immutable/chunks/CompatibilityModal.fG17-p3P.js",s+"/_app/immutable/chunks/EditCompatibilityForm.DjnzT942.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.Dv-i0tpT.js",s+"/_app/immutable/chunks/GuideCard.woxT00Cv.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.3d-aYJr2.js",s+"/_app/immutable/chunks/MetaDescriptors.TEX4T1nT.js",s+"/_app/immutable/chunks/ModCard.DCYpYnmj.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.DCK844Ve.js",s+"/_app/immutable/chunks/ModForm.Cmqecs7B.js",s+"/_app/immutable/chunks/Page404.Bal63V81.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.BZo_ZfMF.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.OE_Q56X1.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.BLAmYJpr.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.CZw1QOyN.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.DG6XnBFm.js",s+"/_app/immutable/chunks/forms.QVQn9_Bp.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.ZMFEidR7.js",s+"/_app/immutable/chunks/launcher.BLlI05wj.js",s+"/_app/immutable/chunks/markdown.CC__0jmd.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.9SWpr5Xv.js",s+"/_app/immutable/chunks/user.B11sKlvf.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.DqaX6SDZ.js",s+"/_app/immutable/entry/start.DWBO_Zdy.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],_=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1727647976926",m=self,o=`cache${n}`,c=l.concat(_),d=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function b(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&d.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||b(a.request))())});
