const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.CxMgnR_D.js",s+"/_app/immutable/nodes/0.CvuqGP84.js",s+"/_app/immutable/assets/0.dzcNOYQ2.css",s+"/_app/immutable/nodes/1.CIXEZPHX.js",s+"/_app/immutable/nodes/10.Dd1fZFU0.js",s+"/_app/immutable/nodes/11.Cklhk7e-.js",s+"/_app/immutable/nodes/12.CRnBgDkC.js",s+"/_app/immutable/nodes/13.CM-8puXy.js",s+"/_app/immutable/nodes/14.Bj94xRI_.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.BKrajwqD.js",s+"/_app/immutable/nodes/16.CPHnbDdg.js",s+"/_app/immutable/nodes/17.CDjp2EqN.js",s+"/_app/immutable/nodes/18.DWZJMfxS.js",s+"/_app/immutable/nodes/19.BjcpV6lI.js",s+"/_app/immutable/nodes/2.B-EzsILG.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.Bt45MTck.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.YQ881ezH.js",s+"/_app/immutable/nodes/22.DR-SX5Wt.js",s+"/_app/immutable/nodes/23.cmyDzSNu.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.D2pKpQfb.js",s+"/_app/immutable/nodes/25.BFmVOKiV.js",s+"/_app/immutable/nodes/26.B7Q4HU9H.js",s+"/_app/immutable/nodes/27.EyU9nA7L.js",s+"/_app/immutable/nodes/3.K0JyWCEM.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.Ukqhg9Cc.js",s+"/_app/immutable/nodes/5.vkQpABhy.js",s+"/_app/immutable/nodes/6.pFhI-4jH.js",s+"/_app/immutable/nodes/7.CHT6Yu4u.js",s+"/_app/immutable/nodes/8.BvRs2R4x.js",s+"/_app/immutable/nodes/9.BRAKxTFx.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.BiUfJbzg.js",s+"/_app/immutable/chunks/CompatibilityModal.BJOa0Wgj.js",s+"/_app/immutable/chunks/EditCompatibilityForm.DJwfbBlI.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.BgPn-U6K.js",s+"/_app/immutable/chunks/GuideCard.DAtlAIIz.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.DT8zeZMD.js",s+"/_app/immutable/chunks/MetaDescriptors.CtGvH0gU.js",s+"/_app/immutable/chunks/ModCard.L9-o-Koa.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.DWax1mTs.js",s+"/_app/immutable/chunks/ModForm.DHRlMiSR.js",s+"/_app/immutable/chunks/Page404.CH5b09f8.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.HYidANGX.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.BBCZfg-p.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.CTxPVcT4.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.jOBDgKJ7.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.BtnRuKW0.js",s+"/_app/immutable/chunks/forms.wmiATdJ_.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.Djp7S2nd.js",s+"/_app/immutable/chunks/launcher.TFvXmi0g.js",s+"/_app/immutable/chunks/markdown.B4UyfYLS.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.BoP7xWE2.js",s+"/_app/immutable/chunks/user.DO1d46Ct.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.DAlhGf-g.js",s+"/_app/immutable/entry/start.C_s4cQNu.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1727648125724",p=self,o=`cache${n}`,c=l.concat(b),_=new Set(c);p.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{p.skipWaiting()}))});p.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);p.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const m=await e.match(a);if(m)return m;throw t}}p.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),m=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!m&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
